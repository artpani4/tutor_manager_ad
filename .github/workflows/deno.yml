name: Deploy with Guarden and Deno Deploy

on:
  push:
    branches: ["main"]

permissions:
    id-token: write # Needed for auth with Deno Deploy
    contents: read # Needed to clone the repository

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install Guarden CLI
        run: deno install --allow-all -n guarden https://raw.githubusercontent.com/artpani4/guarden/refs/heads/main/source/client/cli.ts

      - name: Fetch and Set Secrets
        run: |
          guarden fetch-set
          # Экспортируем все переменные окружения в файл
          printenv | grep -E 'TG_BOT_TOKEN|SUPABASE_' > $GITHUB_ENV
        env:
          GUARDEN_TOKEN: ${{ secrets.GUARDEN_TOKEN }}
          GUARDEN_CURRENT_ENV: prod
          GUARDEN_CURRENT_PROJECT: tutor_manager_ad

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "artpani-tutor-manager-ad"
          entrypoint: "./source/main.ts"
        env:
          GUARDEN_TOKEN: ${{ env.GUARDEN_TOKEN }}
          GUARDEN_CURRENT_ENV: ${{ env.GUARDEN_CURRENT_ENV }}
          GUARDEN_CURRENT_PROJECT: ${{ env.GUARDEN_CURRENT_PROJECT }}
          TG_BOT_TOKEN: ${{ env.TG_BOT_TOKEN }}  # Экспортируемые переменные
          SUPABASE_API_URL: ${{ env.SUPABASE_API_URL }}
          SUPABASE_API_TOKEN: ${{ env.SUPABASE_API_TOKEN }}
          SUPABASE_SCHEMA: ${{ env.SUPABASE_SCHEMA }}
